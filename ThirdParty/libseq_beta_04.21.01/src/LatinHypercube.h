//////////////////////////////////////////////////////////////////////////////
//
// LatinHypercube.h, 6.8.99, Ilja Friedel
//
//////////////////////////////////////////////////////////////////////////////
//
// Status: tested, ok
//
//////////////////////////////////////////////////////////////////////////////

#ifndef LATINHYPERCUBE_USED
#define LATINHYPERCUBE_USED

//////////////////////////////////////////////////////////////////////////////
// standard include files
//////////////////////////////////////////////////////////////////////////////

#include <stdio.h>
#include <assert.h>
#include <cmath>

//////////////////////////////////////////////////////////////////////////////
// own include files
//////////////////////////////////////////////////////////////////////////////

#include "options.h"
#include "own_types.h"
#include "digit_gen.h"
#include "Permutation.h"
#include "DigitalSequence.h"

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

class LatinHypercube : public Sequence
{
   LazyRandomPermutation  ** PermList;
   UL_int                    length;
   double                    inv_length;

public:
 
                 LatinHypercube(UL_int, UL_int);
   virtual      ~LatinHypercube();

          void   operator++(void);
          void   random_restart(void);
};

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

#endif
